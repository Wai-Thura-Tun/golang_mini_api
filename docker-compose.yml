services:
  app:
    build: .
    ports:
      - "${APP_PORT}:3000"
    env_file:
      - .env
    restart: always
    depends_on:
      - migrate
    networks:
      - new

  database:
    image: mysql:8.0
    networks:
      new:
        aliases:
          - mysql
    ports:
      - "${DATABASE_PORT}:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${DATABASE_PASSWORD}
      - MYSQL_DATABASE=${DATABASE_NAME}
      - MYSQL_USER=${DATABASE_USERNAME}
      - MYSQL_PASSWORD=${DATABASE_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql
      - mysql-run:/var/run/mysqld
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    command: >
      bash -c "chown -R mysql:mysql /var/run/mysqld &&
               chmod 750 /var/run/mysqld &&
               exec docker-entrypoint.sh mysqld"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "${DATABASE_USERNAME}", "-p${DATABASE_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
  
  migrate:
    image: migrate/migrate
    networks:
      - new
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - ./internal/database/migrations:/migrations
    command: [
      "-path", "/migrations",
      "-database", "mysql://${DATABASE_USERNAME}:${DATABASE_PASSWORD}@tcp(mysql:3306)/${DATABASE_NAME}?multiStatements=true",
      "up"
    ]

volumes:
  mysql-data:
  mysql-run:

networks:
  new:
    driver: bridge
